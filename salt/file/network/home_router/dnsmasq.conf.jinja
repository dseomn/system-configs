# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


{% from 'network/home_router/map.jinja' import home_router %}
{% from 'network/home_router/dns/map.jinja' import dns %}

{% set host = pillar.network.hosts[grains.id] %}
{% set segments = pillar.network.segments %}
{% set sites = pillar.network.sites %}
{% set site = sites[host.site] %}
{% set global = pillar.network.global %}

{% set subdomain = '{}.{}'.format(host.site, global.domain) %}


# Avoid conflicts with systemd-resolved which is also listening on port 53, but
# not on the same interfaces and addresses.
bind-dynamic

no-resolv
server=::1#{{ dns.dnss_port }}
server=/{{ '/'.join(home_router.unbound_domains) }}/::1#{{ dns.unbound_port }}
local=/{{ subdomain }}/
local=/{{ site.id }}.10.in-addr.arpa/
{% set site_ula_nibbles_reversed = [] -%}
{%- for word in global.ula.split(':') -%}
  {%- for nibble in '{:0>4}'.format(word) -%}
    {%- do site_ula_nibbles_reversed.insert(0, nibble) -%}
  {%- endfor -%}
{%- endfor -%}
{%- for nibble in '{:02x}'.format(site.id) -%}
  {%- do site_ula_nibbles_reversed.insert(0, nibble) -%}
{%- endfor %}
local=/{{ '.'.join(site_ula_nibbles_reversed) }}.ip6.arpa/
{%- for other_site_name, other_site in sites.items()
    if other_site_name != host.site %}
{%- set dns_server = '{}:{:02x}{:02x}::{:x}'.format(
    global.ula,
    other_site.id,
    segments[other_site.home_router.dns_server.segment].id,
    other_site.home_router.dns_server.interface_id,
) %}
server=/{{ other_site_name }}.{{ global.domain }}/{{ dns_server }}
rev-server=10.{{ other_site.id }}.0.0/16,{{ dns_server }}
rev-server={{ '{}:{:02x}00::/56,{}'.format(
    global.ula,
    other_site.id,
    dns_server,
) }}
{%- endfor %}
cache-size=0

no-hosts

domain={{ subdomain }}

enable-ra

dhcp-option=tag:noDefaultRoute,option:router

{% for interface_name, interface in host.interfaces.items()
    if 'home_router' in interface %}
{% set segment = segments[interface.segment] %}
{% set ipv4_prefix = '10.{}.{}'.format(site.id, segment.id) %}
{% set ipv6_ula_prefix = '{}:{:02x}{:02x}'.format(
    global.ula,
    site.id,
    segment.id,
) %}

interface={{ interface_name }}

interface-name={{ grains.host }}.{{ subdomain }},{{ interface_name }}
interface-name={{ grains.host }},{{ interface_name }}

{%- if interface.home_router.get('default_route', True) %}
{%- set set_no_default_route = '' %}
{%- else %}
{%- set set_no_default_route = 'set:noDefaultRoute,' %}
ra-param={{ interface_name }},0,0
{%- endif %}

{%- if 'lease_time' in interface.home_router %}
{%- set lease_time = ',' + interface.home_router.lease_time %}
{%- else %}
{%- set lease_time = '' %}
{%- endif %}

dhcp-range={{ set_no_default_route }}{{ ipv4_prefix }}.129,{{ ipv4_prefix }}.254{{ lease_time }}
dhcp-range={{ set_no_default_route }}{{ ipv6_ula_prefix }}::100,{{ ipv6_ula_prefix }}::1ff,slaac{{ lease_time }}
dhcp-range={{ set_no_default_route }}::,constructor:{{ interface_name }},slaac{{ lease_time }}

{% for other_host_name, other_host
    in interface.home_router.get('hosts', {}).items() %}
{% set other_host_ipv4 = '{}.{}'.format(ipv4_prefix, other_host.interface_id) %}
{% set other_host_ipv6_ula = '{}::{:x}'.format(
    ipv6_ula_prefix,
    other_host.interface_id,
) %}
dhcp-host={{ '{},{}{},[{}],{}{}'.format(
    other_host.mac,
    set_no_default_route,
    other_host_ipv4,
    other_host_ipv6_ula,
    other_host_name,
    lease_time,
) }}
{% for short_host_name in [other_host_name] + other_host.get('aliases', []) %}
host-record={{ '{}.{},{},{},{}'.format(
    short_host_name,
    subdomain,
    short_host_name,
    other_host_ipv4,
    other_host_ipv6_ula,
) }}
{% endfor %}
{% endfor %}
{% endfor %}

{% for alias_name, targets
    in global.get('home_router', {}).get('aliases', {}).items() %}
{% for target in targets %}
host-record={{ '{}.{},10.{}.{}.{},{}:{:02x}{:02x}::{:x}'.format(
    alias_name,
    global.domain,
    sites[target.site].id,
    segments[target.segment].id,
    target.interface_id,
    global.ula,
    sites[target.site].id,
    segments[target.segment].id,
    target.interface_id,
) }}
{% endfor %}
{% endfor %}

{% for interface_name, interface in host.interfaces.items()
    if 'wireguard' in interface %}
interface={{ interface_name }}
no-dhcp-interface={{ interface_name }}
interface-name={{ grains.host }}.{{ subdomain }},{{ interface_name }}
interface-name={{ grains.host }},{{ interface_name }}
{% endfor %}
