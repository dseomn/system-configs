# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


{% from 'crypto/map.jinja' import crypto %}
{% from 'mail/map.jinja' import mail %}


{{ mail.postfix_main_cf_boilerplate(
    child_instances=accumulator | default({})) }}


# Host identity.
myhostname = {{ grains.fqdn }}
mydomain = {{ grains.domain }}


# Accept mail only from the local system.
master_service_disable = inet
mynetworks_style = host


# Allow user+extension addresses.
recipient_delimiter = +


# Use aliases to external email addresses for all local recipients. If no alias
# exists for a user, send it to root by default. (This is different from the
# luser_relay parameter. luser_relay controls delivery for unknown recipients;
# this controls delivery for known recipients who aren't listed in
# /etc/aliases.) If something somehow manages to get through without an alias,
# reject it. (owner_request_special is needed to prevent static:root from
# triggering special logic that rewrites the MAIL FROM address when a
# ${user}-owner alias is found.)
local_recipient_maps =
  proxy:unix:passwd.byname ${default_database_type}:/etc/aliases
allow_mail_to_commands =
allow_mail_to_files =
alias_maps = ${default_database_type}:/etc/aliases static:root
alias_database = ${default_database_type}:/etc/aliases
forward_path =
owner_request_special = no
mailbox_transport = error:5.1.1 Bad destination mailbox address


# Where to send all remote mail.
relayhost = [{{ pillar.mail.local_relay.relay }}]
smtp_tcp_port = submissions
smtp_tls_wrappermode = yes
smtp_tls_servername = nexthop
smtp_tls_security_level = fingerprint
smtp_tls_fingerprint_cert_match =
  {%- for fingerprint in pillar.mail.local_relay[
      'relay_fingerprints_' + crypto.openssl.digest] %}
  {{ fingerprint }}
  {%- endfor %}
smtp_sasl_auth_enable = yes
smtp_sasl_tls_verified_security_options = noanonymous
smtp_sasl_password_maps = ${_database_dir}/smtp_sasl_password
