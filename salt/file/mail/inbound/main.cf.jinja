# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


{% from 'crypto/map.jinja' import crypto %}
{% from 'mail/map.jinja' import mail %}


{{ mail.postfix_main_cf_boilerplate(instance='postfix-inbound') }}

# Identity.
myhostname = {{ grains.fqdn }}
mydomain = {{ grains.domain }}
myorigin = {{ pillar.mail.system.domain }}
mynetworks =
mydestination =
recipient_delimiter = +

# How mail comes in.
smtpd_tls_chain_files =
  {{ default_certificate.key }}
  {{ default_certificate.fullchain }}
tls_server_sni_maps = ${_database_dir}/tls_server_sni
smtpd_tls_security_level = may

# Permissions.
smtpd_relay_restrictions = reject_unauth_destination

# Authentication of email that never left the Administrative Management Domain
# (ADMD).
_admd_internal = no
smtpd_data_restrictions =
  check_client_access static:{ PREPEND ADMD-Internal: ${_admd_internal} }

# General email authentication.
smtpd_milters = unix:dkimpy-milter/verify unix:opendmarc/opendmarc
non_smtpd_milters = ${smtpd_milters}

# Mail routing.
alias_maps =
alias_database =
local_recipient_maps = fail:no_local_recipients
local_transport = error:5.1.1 Bad destination mailbox address
virtual_mailbox_domains = ${_database_dir}/virtual_mailbox_domains
virtual_mailbox_maps = ${_database_dir}/virtual_mailbox
virtual_alias_domains =
virtual_alias_maps = ${_database_dir}/virtual_alias
virtual_transport = lmtp:inet:{{ pillar.mail.common.storage.name }}
default_transport = error:5.7.1 Delivery not authorized, message refused

# How mail goes out.
lmtp_tls_wrappermode = yes
lmtp_tls_servername = nexthop
lmtp_tls_chain_files =
  {{ system_certificate.key }}
  {{ system_certificate.fullchain }}
lmtp_tls_security_level = fingerprint
lmtp_tls_fingerprint_cert_match =
  {%- for certificate in pillar.mail.common.storage.certificates %}
  {{ crypto.openssl.cert_fingerprint(certificate) }}
  {%- endfor %}
lmtp_destination_recipient_limit = 1
