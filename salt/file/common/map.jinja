{#
 # Copyright 2021 Google LLC
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
 #
 #     https://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.
 #}


{% set common =  salt.grains.filter_by({
    'Debian': {
        'local_bin': '/usr/local/bin',
        'local_etc': '/usr/local/etc',
        'local_lib': '/usr/local/lib',
        'local_sbin': '/usr/local/sbin',
        'local_share': '/usr/local/share',
        'nologin_shell': '/usr/sbin/nologin',
        'nonexistent_path': '/nonexistent',
    }
}) %}


# Note that this does not use group.present, because it shouldn't create the
# group.
{% macro _user_in_group(user, group) %}
{{ user }} is a member of {{ group }}:
  cmd.run:
  - name: adduser '{{ user }}' '{{ group }}'
  - unless:
    - |
        case "$(id -G -n '{{ user }}')" in
          '{{ group }} '*|*' {{ group }} '*|*' {{ group }}'|'{{ group }}')
            exit 0
            ;;
        esac
        exit 1
  {% for key, value in kwargs.items() %}
  - {{ key }}: {{ value | json }}
  {% endfor %}
{% endmacro %}


{% do common.update({
    'user_in_group': _user_in_group,
}) %}
