# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Configuration for an individual host on the network. The filename is the Salt
# minion ID, with the .yaml.jinja extension appended.

# Required. Site name. See network/sites.yaml.jinja.
site: bos01

# Host-local DNS resolver configuration.
dns:
-
  # Use a static DNS server.
  static: 2001:db8::1

# Required. Network interfaces.
interfaces:

  # Interface name
  upstream:
    # Renames an interface to have the name above if this section is present and
    # the interface matches it.
    rename_match:
      mac: 00:00:5e:00:53:00
    # The interface is facing upstream, so it shouldn't have any of our private
    # or ULA addresses behind it.
    upstream: true
    # IP addresses.
    ip:
    -
      # Receive addresses from DHCP and/or SLAAC.
      auto:
    # Per-interface DNS resolver configuration.
    dns:
    -
      # Receive DNS servers from DHCP and/or Router Advertisements.
      auto:
    -
      # Use a static DNS server.
      static: 192.0.2.1

  eth1:
    # Makes this interface a child of a bridge, with untagged frames on the
    # specified segment. See network/segments.yaml.jinja.
    bridge_segment: lan

  eth2:
    # Makes this interface a child of bridge(s), with tagged frames on the
    # specified segments.
    bridge_segments:
    - lan

  wlan0:
    # Run an access point on this interface.
    access_point:
      # If present, the interface's MAC address is changed to this before
      # hostapd starts. (See documentation in hostapd.conf about multiple
      # BSSes.)
      mac: 00:00:5e:00:53:00
      # Required. Segments to serve on the access point. See
      # network/segments.yaml.jinja.
      segments:
      - lan
      # Required. hostapd.conf settings for this interface.
      hostapd:
      - hw_mode=g
      - channel=acs_survey
      - wmm_enabled=1
      - ieee80211n=1
      # Run `iw list` to set ht_capab.
      - require_ht=1
      - obss_interval=300

  lan:
    # Creates the name above as a virtual interface on the specified segment.
    segment: lan
    ip:
    # Assigns IP addresses based on the segment above. See
    # network/sites.yaml.jinja and network/segments.yaml.jinja for the subnet
    # prefixes. For each subnet prefix, an address is assigned with the number
    # here as the interface ID (IPv6) or host number (IPv4).
    - interface_id: 1
    # Adds static routes.
    routes:
    -
      # Required. Destination prefix of the route.
      destination: 2001:db8:1::/48
      # Gateway to send traffic through.
      gateway: 2001:db8::1
    # Enables home router things (DNS server, DHCP server, etc.) on this
    # interface, and configures them.
    home_router:
      # Whether to advertise this host as the default router in DHCPv4 and
      # Router Advertisements. Default: true.
      default_route: true
      # See dnsmasq(8).
      lease_time: 10m
      # Other hosts on this network segment.
      hosts:
        # Short host name, without domain name.
        smtp:
          # Required. MAC address.
          mac: 00:00:5e:00:53:00
          # Required. See interface_id parameter in the ip section above.
          # Normally, this is only used to provide addresses in private (IPv4
          # private or IPv6 ULA) prefixes. However, if services are specified
          # below, this is also used to provide addresses in public prefixes, so
          # that the firewall can allow connections to those services.
          interface_id: 2
          # Additional short host names that should point at this host. The same
          # name can be listed for multiple hosts.
          aliases:
          - mail
          # Publicly available services. For both IPv4 and IPv6, this allows
          # forwarding from any interface to the given service. For IPv4, this
          # additionally sets up port forwarding on any interfaces listed in
          # firewall.masquerade_ipv4. If there are any interfaces in
          # firewall.masquerade_ipv4, services listed here must be unique.
          services:
          - tcp: smtp

  wg.lan:
    segment: wg.lan
    ip:
    - interface_id: 1
    # Configures this interface as a WireGuard VPN.
    wireguard:
      # Required. Base64-encoded private key.
      private_key: ...
      # Required. UDP port to listen on for wireguard traffic.
      listen_port: 12345
      # Wireguard peers.
      peers:
      -
        # Required. Base64-encoded public key.
        public_key: ...
        # Base64-encoded pre-shared key.
        preshared_key: ...
        # Endpoint to connect to.
        endpoint: some-peer.example.com:54321
        # See https://www.wireguard.com/quickstart/
        persistent_keepalive: 25
        # Adds allowed IPs for a specific interface ID. Requires segment to be
        # set on the interface.
        interface_id: 2
        # Allowed IPs, specified manually.
        allowed_ips:
        - 192.0.2.0/24
        - 2001:db8::/32

# Firewall configuration.
firewall:

  # Pairs of [input interface, output interface] that allow forwarding across.
  forward:
  - [lan, upstream]
  - [lan, wg.lan]
  - [wg.lan, upstream]
  - [wg.lan, lan]

  # Interfaces to masquerade outbound IPv4 traffic.
  masquerade_ipv4:
  - upstream

  # Custom nftables rules. Mainly for temporary/one-off things.
  custom_nftables: |
    add rule inet filter input tcp dport 14738 accept
